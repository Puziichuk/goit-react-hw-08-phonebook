{"version":3,"sources":["untils/motionVar.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","views/ContactsView/ContactsView.module.css","untils/contacts-api.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["variants","initial","scale","animate","exit","transition","ease","duration","module","exports","axios","defaults","baseURL","fetchContacts","dispatch","fetchContactsRequest","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","addContact","name","number","contact","addContactRequest","post","contactsAPI","addContactSuccess","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useDispatch","visibleContacts","useSelector","contactsSelectors","length","motion","ul","className","s","list","AnimatePresence","map","li","item","info","IconButton","color","type","onClick","contactsOperations","p","ContactForm","useState","setName","setNumber","handleChange","e","target","value","resetInput","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","label","input","onChange","placeholder","format","mask","pattern","Button","variant","size","Filter","contactsActions","filterContact","ContactsView","useEffect","wrapper"],"mappings":"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","file":"static/js/contacts-view.e03df1e0.chunk.js","sourcesContent":["export const variants = {\n    initial: { scale: 0 },\n    animate: { scale: 1 },\n    exit: { scale: 0 },\n    transition: { ease: 'easeOut', duration: 0.3 },\n  };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsView_wrapper__CCOvq\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport function fetchContacts() {\n  return axios.get('/contacts');\n}\n\nexport function addContact(contact) {\n  return axios.post('/contacts', contact);\n}\n\nexport function deleteContact(id) {\n  return axios.delete(`/contacts/${id}`);\n}\n","import {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n  } from './contacts-actions';\n  import * as contactsAPI from '../../untils/contacts-api';\n  \n  export const fetchContacts = () => dispatch => {\n    dispatch(fetchContactsRequest());\n  \n    contactsAPI\n      .fetchContacts()\n      .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n      .catch(error => dispatch(fetchContactsError(error)));\n  };\n  \n  export const addContact = (name, number) => dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n  \n    dispatch(addContactRequest());\n  \n    contactsAPI\n      .addContact(contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n  \n  export const deleteContact = id => dispatch => {\n    dispatch(deleteContactRequest());\n  \n    contactsAPI\n      .deleteContact(id)\n      .then(() => dispatch(deleteContactSuccess(id)))\n      .catch(error => dispatch(deleteContactError(error)));\n  };","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../untils/motionVar';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <motion.ul className={s.list}>\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                className={s.item}\n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                variants={variants}\n              >\n                <p className={s.info}>\n                  <b>{name}</b>\n                  <em>{number}</em>\n                </p>\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"secondary\"\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            variants={variants}\n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport NumberFormat from 'react-number-format';\nimport Button from '@material-ui/core/Button';\nimport { toast } from 'react-toastify';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else if (checkValidNumber(number)) {\n      toast.error('💩 Enter the correct number phone!');\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <NumberFormat\n          placeholder=\"Enter phone number\"\n          format=\"(###) ###-##-##\"\n          mask=\"_\"\n          pattern=\"^[0-9\\s\\(\\)\\-]{15}\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      {!isLoading && (\n     <Button\n     variant=\"contained\"\n     color=\"secondary\"\n     size=\"large\"\n     type=\"submit\"\n   >\n     Add contact\n   </Button>\n )}\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../untils/motionVar';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <AnimatePresence>\n          <label className={s.label}>\n            <motion.input\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              transition=\"transition\"\n              variants={variants}\n              className={s.input}\n              type=\"text\"\n              value={filter}\n              onChange={e =>\n                dispatch(contactsActions.filterContact(e.target.value))\n              }\n            />\n          </label>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default Filter;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactList from '../../components/ContactList/ContactList';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport { contactsOperations } from '../../redux/contacts';\nimport s from './ContactsView.module.css';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={s.wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}"],"sourceRoot":""}