{"version":3,"sources":["untils/motionVar.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","views/ContactsView/ContactsView.module.css","redux/contacts/contacts-operation.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["variants","initial","scale","animate","exit","transition","ease","duration","module","exports","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","response","status","toast","info","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useDispatch","visibleContacts","useSelector","contactsSelectors","length","motion","ul","className","s","list","AnimatePresence","map","id","li","item","IconButton","color","type","onClick","contactsOperations","p","ContactForm","useState","setName","setNumber","handleChange","e","target","value","resetInput","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","label","input","onChange","placeholder","format","mask","pattern","Button","variant","size","Filter","contactsActions","filterContact","ContactsView","useEffect","wrapper"],"mappings":"gJAAA,kCAAO,IAAMA,EAAW,CACpBC,QAAS,CAAEC,MAAO,GAClBC,QAAS,CAAED,MAAO,GAClBE,KAAM,CAAEF,MAAO,GACfG,WAAY,CAAEC,KAAM,UAAWC,SAAU,M,oBCH7CC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,2B,oBCA1FD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,oBCA/HD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,oBCAxDD,EAAOC,QAAU,CAAC,QAAU,gC,wgBCafC,EAAgB,kBAAM,SAAAC,GACjCA,EAASC,kCAETC,IACGC,IAAI,aACJC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASM,+BAAqBD,OACjDE,OAAM,SAAAC,GACLR,EAASS,6BAAmBD,IAEE,MAA1BA,EAAME,SAASC,OACjBC,IAAMC,KAAK,uCACwB,MAA1BL,EAAME,SAASC,OACxBC,IAAMJ,MAAM,yCAEZI,IAAMJ,MAAM,sDAKPM,EAAa,SAACC,EAAMC,GAAP,OAAkB,SAAAhB,GAC1C,IAAMiB,EAAU,CACdF,OACAC,UAGFhB,EAASkB,+BAEThB,IACGiB,KAAK,YAAaF,GAClBb,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASoB,4BAAkBf,OAC9CE,OAAM,SAAAC,GACLR,EAASqB,0BAAgBb,IAEK,MAA1BA,EAAME,SAASC,OACjBC,IAAMJ,MAAM,2BAEZI,IAAMJ,MAAM,sDAKPc,EAAgB,SAAAC,GAAS,OAAI,SAAAvB,GACxCA,EAASwB,kCAETtB,IACGuB,OADH,oBACuBF,IACpBnB,MAAK,kBAAMJ,EAAS0B,+BAAqBH,OACzChB,OAAM,SAAAC,GACLR,EAAS2B,6BAAmBnB,IAEE,MAA1BA,EAAME,SAASC,OACjBC,IAAMC,KAAK,uCACwB,MAA1BL,EAAME,SAASC,OACxBC,IAAMJ,MAAM,yCAEZI,IAAMJ,MAAM,sD,QCnEPoB,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,SAASG,WACrCC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAAStB,OACnC2B,EAAY,SAAAN,GAAK,OAAIA,EAAMC,SAASM,QAEpCC,EAAqBC,YAChC,CAACV,EAAaO,IACd,SAACL,EAAUM,GACT,IAAMG,EAAmBH,EAAOI,cAEhC,OAAOV,EAASM,QAAO,qBAAGrB,KACnByB,cAAcC,SAASF,S,+ECkDnBG,MAvDf,WACE,IAAM1C,EAAW2C,cACXC,EAAkBC,YAAYC,EAAkBT,oBAChDP,EAAWe,YAAYC,EAAkBlB,aAE/C,OACE,qCACGE,EAASiB,OAAS,GACjB,cAACC,EAAA,EAAOC,GAAR,CAAWC,UAAWC,IAAEC,KAAxB,SACE,cAACC,EAAA,EAAD,UACGT,EAAgBU,KAAI,gBAAGC,EAAH,EAAGA,GAAIxC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,eAACgC,EAAA,EAAOQ,GAAR,CACEN,UAAWC,IAAEM,KAEbnE,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXL,SAAUA,IAPZ,UASE,oBAAG6D,UAAWC,IAAEtC,KAAhB,UACE,4BAAIE,IACJ,6BAAKC,OAEP,cAAC0C,EAAA,EAAD,CACE,aAAW,SACXC,MAAM,YACNC,KAAK,SACLC,QAAS,kBAAM7D,EAAS8D,EAAmBxC,cAAciC,KAJ3D,SAME,cAAC,IAAD,QAjBGA,WAyBbzB,EAASiB,QACT,cAACM,EAAA,EAAD,UACE,cAACL,EAAA,EAAOe,EAAR,CACEzE,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXL,SAAUA,IALZ,gE,4CCgEK2E,MAxGf,WACE,IAAMhE,EAAW2C,cACXb,EAAWe,YAAYC,EAAkBlB,aACzCK,EAAYY,YAAYC,EAAkBd,YAChD,EAAwBiC,mBAAS,IAAjC,mBAAOlD,EAAP,KAAamD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOjD,EAAP,KAAemD,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBvD,EAAR,EAAQA,KAAMwD,EAAd,EAAcA,MAEd,OAAQxD,GACN,IAAK,OACHmD,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAsCAC,EAAa,WACjBN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMjB,UAAWC,IAAEsB,KAAMC,SAtBN,SAAAL,GACnBA,EAAEM,kBAnBoB,SAAA5D,GACtB,OAAOe,EAAS8C,MACd,SAAA3D,GAAO,OAAIA,EAAQF,KAAKyB,gBAAkBzB,EAAKyB,iBAkB7CqC,CAAgB9D,IAdI,SAAAC,GACxB,OAAOc,EAAS8C,MAAK,SAAA3D,GAAO,OAAIA,EAAQD,SAAWA,KAexC8D,CAAkB9D,IAZP,SAACD,EAAMC,GAC7B,MAAuB,KAAhBD,EAAKgE,QAAmC,KAAlB/D,EAAO+D,OAazBC,CAAgBjE,EAAMC,IAVV,SAAAA,GACvB,OAAQ,yBAAyBiE,KAAKjE,GAW3BkE,CAAiBlE,GAG1BhB,EAAS8D,EAAmBhD,WAAWC,EAAMC,IAF7CJ,IAAMJ,MAAM,gDAFZI,IAAMC,KAAK,2DAFXD,YAAM,gBAAD,OAAOI,EAAP,kCAFLJ,YAAM,gBAAD,OAAOG,EAAP,kCAUPyD,KASA,UACE,wBAAOtB,UAAWC,IAAEgC,MAApB,iBAEE,uBACEjC,UAAWC,IAAEiC,MACbxB,KAAK,OACL7C,KAAK,OACLwD,MAAOxD,EACPsE,SAAUjB,EACVkB,YAAY,mBAGhB,wBAAOpC,UAAWC,IAAEgC,MAApB,mBAEE,cAAC,IAAD,CACEG,YAAY,qBACZC,OAAO,kBACPC,KAAK,IACLC,QAAQ,yBACR7B,KAAK,MACL7C,KAAK,SACLwD,MAAOvD,EACPqE,SAAUjB,EACVlB,UAAWC,IAAEiC,YAGfnD,GACH,cAACyD,EAAA,EAAD,CACAC,QAAQ,YACRhC,MAAM,YACNiC,KAAK,QACLhC,KAAK,SAJL,6B,kBC/DUiC,MA9Bf,WACE,IAAM7F,EAAW2C,cACXP,EAASS,YAAYC,EAAkBX,WACvCL,EAAWe,YAAYC,EAAkBlB,aAE/C,OACE,mCACGE,EAASiB,OAAS,GACjB,cAACM,EAAA,EAAD,UACE,uBAAOH,UAAWC,IAAEgC,MAApB,SACE,cAACnC,EAAA,EAAOoC,MAAR,CACE9F,QAAQ,UACRE,QAAQ,UACRC,KAAK,OACLC,WAAW,aACXL,SAAUA,IACV6D,UAAWC,IAAEiC,MACbxB,KAAK,OACLW,MAAOnC,EACPiD,SAAU,SAAAhB,GAAC,OACTrE,EAAS8F,EAAgBC,cAAc1B,EAAEC,OAAOC,kB,kBClBjD,SAASyB,IACtB,IAAMhG,EAAW2C,cAIjB,OAFAsD,qBAAU,kBAAMjG,EAAS8D,EAAmB/D,mBAAkB,CAACC,IAG7D,sBAAKkD,UAAWC,IAAE+C,QAAlB,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/contacts-view.af4c6eed.chunk.js","sourcesContent":["export const variants = {\n    initial: { scale: 0 },\n    animate: { scale: 1 },\n    exit: { scale: 0 },\n    transition: { ease: 'easeOut', duration: 0.3 },\n  };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsView_wrapper__CCOvq\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport { toast } from 'react-toastify';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => {\n      dispatch(fetchContactsError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => {\n      dispatch(addContactError(error));\n\n      if (error.response.status === 400) {\n        toast.error('Contact creation error!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => {\n      dispatch(deleteContactError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../untils/motionVar';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <motion.ul className={s.list}>\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                className={s.item}\n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                variants={variants}\n              >\n                <p className={s.info}>\n                  <b>{name}</b>\n                  <em>{number}</em>\n                </p>\n                <IconButton\n                  aria-label=\"delete\"\n                  color=\"secondary\"\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            variants={variants}\n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport NumberFormat from 'react-number-format';\nimport Button from '@material-ui/core/Button';\nimport { toast } from 'react-toastify';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else if (checkValidNumber(number)) {\n      toast.error('💩 Enter the correct number phone!');\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <NumberFormat\n          placeholder=\"Enter phone number\"\n          format=\"(###) ###-##-##\"\n          mask=\"_\"\n          pattern=\"^[0-9\\s\\(\\)\\-]{15}\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      {!isLoading && (\n     <Button\n     variant=\"contained\"\n     color=\"secondary\"\n     size=\"large\"\n     type=\"submit\"\n   >\n     Add contact\n   </Button>\n )}\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../untils/motionVar';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <AnimatePresence>\n          <label className={s.label}>\n            <motion.input\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              transition=\"transition\"\n              variants={variants}\n              className={s.input}\n              type=\"text\"\n              value={filter}\n              onChange={e =>\n                dispatch(contactsActions.filterContact(e.target.value))\n              }\n            />\n          </label>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default Filter;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactList from '../../components/ContactList/ContactList';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport { contactsOperations } from '../../redux/contacts';\nimport s from './ContactsView.module.css';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={s.wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}"],"sourceRoot":""}